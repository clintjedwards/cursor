syntax = "proto3";

package api;

message Void {}

service CursorMaster {
  rpc CreatePipeline(CreatePipelineRequest) returns (CreatePipelineResponse) {}
}

message CreatePipelineRequest {
  string name = 1;
  string description = 2;
  string gitRepo = 3;
  string gitBranch = 4;
}

message CreatePipelineResponse { int32 id = 1; }

message Pipeline {
  int32 id = 1;
  string name = 2;
  string description = 3;
  int32 created = 4;
  int32 modified = 5;
  string lastRunID = 6;
  string lastRunDate = 7;
  string LastRunAuthor = 8;
  gitRepo gitRepo = 9;
}

message gitRepo {
  string url = 1;
  string branch = 2;
}

message PipelineRun {
  int32 id = 1;
  int32 pipelineID = 2;
  int32 lastJobID = 3;
  int32 startTime = 4;
  int32 endTime = 5;
  enum PipelineStatus {
    RUNNING = 0;
    READY = 1;
    ERROR = 2;
  }
  PipelineStatus pipelineStatus = 6;
}

message Job {
  int32 id = 1;
  string name = 2;
  string description = 3;
  enum JobStatus {
    UNKNOWN = 0;
    FAILED = 1;
    SUCCESS = 2;
    RUNNING = 3;
    WAITING = 4;
  }
  JobStatus jobStatus = 4;
  repeated int32 dependsOn = 5;
}
