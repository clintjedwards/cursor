syntax = "proto3";
package proto;

// Task is the smallest unit of work, it accomplishes a small part of an entire
// pipeline. Many tasks together make up a single pipeline.
message TaskInfo {
  string name = 1;
  string description = 2;
  repeated string children = 3;
}

service CursorPlugin {
  // GetPipelineInfo is called upon compiling the pipeline so that cursor knowns
  // the structure of the tasks.
  // It returns a task info map that describes what kind of tasks exist in the
  // pipeline and a default task used as the root task
  rpc GetPipelineInfo(GetPipelineInfoRequest) returns (GetPipelineInfoResponse);
  rpc ExecuteTask(ExecuteTaskRequest) returns (ExecuteTaskResponse);
}

message GetPipelineInfoRequest {
}
message GetPipelineInfoResponse {
  string root_task = 1;
  map<string, TaskInfo> tasks = 2;
}

message ExecuteTaskRequest {
  string id = 1;
}

message ExecuteTaskResponse {
  enum Status {
    UNKNOWN = 0;
    FAILED = 1;
    SUCCESS = 2;
    RUNNING = 3;
    WAITING = 4;
  }
  Status status = 1;
  repeated string children = 2;
}
