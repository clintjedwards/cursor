// Code generated by protoc-gen-go. DO NOT EDIT.
// source: plugin/proto/cursorPlugin.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TestResponse struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestResponse) Reset()         { *m = TestResponse{} }
func (m *TestResponse) String() string { return proto.CompactTextString(m) }
func (*TestResponse) ProtoMessage()    {}
func (*TestResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0f3a40d65296300, []int{0}
}

func (m *TestResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestResponse.Unmarshal(m, b)
}
func (m *TestResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestResponse.Marshal(b, m, deterministic)
}
func (m *TestResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestResponse.Merge(m, src)
}
func (m *TestResponse) XXX_Size() int {
	return xxx_messageInfo_TestResponse.Size(m)
}
func (m *TestResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TestResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TestResponse proto.InternalMessageInfo

func (m *TestResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0f3a40d65296300, []int{1}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

func init() {
	proto.RegisterType((*TestResponse)(nil), "proto.TestResponse")
	proto.RegisterType((*Empty)(nil), "proto.Empty")
}

func init() { proto.RegisterFile("plugin/proto/cursorPlugin.proto", fileDescriptor_f0f3a40d65296300) }

var fileDescriptor_f0f3a40d65296300 = []byte{
	// 138 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2f, 0xc8, 0x29, 0x4d,
	0xcf, 0xcc, 0xd3, 0x2f, 0x28, 0xca, 0x2f, 0xc9, 0xd7, 0x4f, 0x2e, 0x2d, 0x2a, 0xce, 0x2f, 0x0a,
	0x00, 0x0b, 0xe9, 0x81, 0x85, 0x84, 0x58, 0xc1, 0x94, 0x92, 0x06, 0x17, 0x4f, 0x48, 0x6a, 0x71,
	0x49, 0x50, 0x6a, 0x71, 0x41, 0x7e, 0x5e, 0x71, 0xaa, 0x90, 0x04, 0x17, 0x7b, 0x6e, 0x6a, 0x71,
	0x71, 0x62, 0x7a, 0xaa, 0x04, 0xa3, 0x02, 0xa3, 0x06, 0x67, 0x10, 0x8c, 0xab, 0xc4, 0xce, 0xc5,
	0xea, 0x9a, 0x5b, 0x50, 0x52, 0x69, 0x64, 0xcf, 0xc5, 0xe3, 0x8c, 0x64, 0x9e, 0x90, 0x3e, 0x17,
	0x97, 0x6b, 0x45, 0x6a, 0x72, 0x69, 0x49, 0xaa, 0x57, 0x7e, 0x92, 0x10, 0x0f, 0xc4, 0x7c, 0x3d,
	0xb0, 0x5a, 0x29, 0x61, 0x28, 0x0f, 0xd9, 0x8e, 0x24, 0x36, 0xb0, 0x98, 0x31, 0x20, 0x00, 0x00,
	0xff, 0xff, 0x9a, 0x43, 0x1d, 0x7f, 0xa4, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CursorPluginClient is the client API for CursorPlugin service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CursorPluginClient interface {
	ExecuteJob(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*TestResponse, error)
}

type cursorPluginClient struct {
	cc *grpc.ClientConn
}

func NewCursorPluginClient(cc *grpc.ClientConn) CursorPluginClient {
	return &cursorPluginClient{cc}
}

func (c *cursorPluginClient) ExecuteJob(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*TestResponse, error) {
	out := new(TestResponse)
	err := c.cc.Invoke(ctx, "/proto.CursorPlugin/ExecuteJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CursorPluginServer is the server API for CursorPlugin service.
type CursorPluginServer interface {
	ExecuteJob(context.Context, *Empty) (*TestResponse, error)
}

func RegisterCursorPluginServer(s *grpc.Server, srv CursorPluginServer) {
	s.RegisterService(&_CursorPlugin_serviceDesc, srv)
}

func _CursorPlugin_ExecuteJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CursorPluginServer).ExecuteJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.CursorPlugin/ExecuteJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CursorPluginServer).ExecuteJob(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _CursorPlugin_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.CursorPlugin",
	HandlerType: (*CursorPluginServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ExecuteJob",
			Handler:    _CursorPlugin_ExecuteJob_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "plugin/proto/cursorPlugin.proto",
}
